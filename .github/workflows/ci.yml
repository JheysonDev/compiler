name: Rust CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - name: Install Rust
        uses: hecrj/setup-rust-action@v1

      - uses: actions/checkout@v2

      - name: Log versions
        run: cargo --version

      - name: Build release
        run: cargo build --release --locked --all-targets

      - name: Test release
        run: cargo test --release --locked --all-targets

      - name: Run examples
        if: startsWith(matrix.os, 'ubuntu')
        env:
          SFLYN_PATH: ./
        run: |
          echo "For examples"
          cargo run ./examples/for/array.sf
          cargo run ./examples/for/hashmap.sf
          echo "Functions examples"
          cargo run ./examples/functions/callback.sf
          cargo run ./examples/functions/double.sf
          cargo run ./examples/functions/less_or_greater.sf
          cargo run ./examples/functions/say_hi.sf
          echo "Interfaces examples"
          cargo run ./examples/interfaces/label.sf
          echo "Modules examples"
          cargo run ./examples/modules/basic/index.sf
          echo "Variables examples"
          cargo run ./examples/variables/arrays.sf
          cargo run ./examples/variables/booleans.sf
          cargo run ./examples/variables/const.sf
          cargo run ./examples/variables/numbers.sf
          cargo run ./examples/variables/strings.sf
          echo "Hello world example"
          cargo run ./examples/hello_world.sf

      - name: Create source code (Linux)
        if: |
          startsWith(matrix.os, 'ubuntu') &&
          github.repository == 'sflynlang/compiler' &&
          startsWith(github.ref, 'refs/tags/')
        run: |
          mkdir -p target/release
          zip -r target/release/sflyn-src.zip std/* LICENSE README.md

      - name: Pre-release (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          cd target/release
          zip -r sflyn-x86_64-unknown-linux-gnu.zip sflyn

      - name: Pre-release (Windows)
        if: startsWith(matrix.os, 'windows')
        run: Compress-Archive -CompressionLevel Optimal -Force -Path target/release/sflyn.exe -DestinationPath target/release/sflyn-x86_64-pc-windows-msvc.zip

      - name: Pre-release (MacOS)
        if: startsWith(matrix.os, 'macOS')
        run: |
          cd target/release
          zip -r sflyn-x86_64-apple-darwin.zip sflyn

      - name: Release
        uses: softprops/action-gh-release@v1
        if: |
          github.repository == 'sflynlang/compiler' &&
          startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            target/release/sflyn-src.zip
            target/release/sflyn-x86_64-unknown-linux-gnu.zip
            target/release/sflyn-x86_64-pc-windows-msvc.zip
            target/release/sflyn-x86_64-apple-darwin.zip
          draft: true
